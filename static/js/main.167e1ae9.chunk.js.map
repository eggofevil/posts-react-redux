{"version":3,"sources":["redux/redux.js","react_components/input.js","react_components/button.js","react_components/posts.js","react_components/main.js","index.js"],"names":["defaultState","posts","store","createStore","state","action","type","concat","post","Input","onChange","this","props","value","React","Component","SubmitButton","onClick","Posts","map","idx","key","Main","input","submitPost","bind","handleInput","submitNewPost","getState","item","console","log","setState","event","target","Container","connect","dispatch","addPost","AppWrapper","ReactDOM","render","document","getElementById"],"mappings":"uPAKMA,EAAe,CACpBC,MAAO,IAwBKC,EAAQC,aAZD,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACrD,OAAOA,EAAOC,MACb,IAjBe,WAkBd,MAAO,CACNL,MAAOG,EAAMH,MAAMM,OAAOF,EAAOG,OAEnC,QACC,OAAOJ,M,OCtBGK,EAAb,uKAOE,OACC,2BAAOC,SAAUC,KAAKC,MAAMF,SAAUG,MAAOF,KAAKC,MAAMC,MAAOP,KAAK,aARvE,GAA2BQ,IAAMC,WCApBC,EAAb,uKAKE,OACC,4BAAQC,QAASN,KAAKC,MAAMK,SAA5B,mBANH,GAAkCH,IAAMC,WCD3BG,EAAb,uKAEE,OACC,4BACEP,KAAKC,MAAMX,MAAMkB,KAAI,SAACX,EAAMY,GAC5B,OAAO,wBAAIC,IAAKD,GAAMZ,WAL3B,GAA2BM,IAAMC,WCMpBO,EAAb,kDACC,WAAYV,GAAQ,IAAD,8BAClB,cAAMA,IACDR,MAAQ,CACZmB,MAAO,IAER,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBAND,EADpB,yDAWEd,KAAKC,MAAMe,cAAchB,KAAKP,MAAMmB,OACpCrB,EAAM0B,WAAW3B,MAAMkB,KAAI,SAAAU,GAAI,OAAIC,QAAQC,IAAIF,MAC/ClB,KAAKqB,SAAS,CAACT,MAAO,OAbxB,kCAeaU,GACX,OAAOtB,KAAKqB,SAAS,CACpBT,MAAOU,EAAMC,OAAOrB,UAjBvB,+BAsBE,OACC,6BACC,iDACA,kBAAC,EAAD,CAAOH,SAAUC,KAAKe,YAAab,MAAOF,KAAKP,MAAMmB,QACrD,kBAAC,EAAD,CAAcN,QAASN,KAAKa,aAC5B,kBAAC,EAAD,CAAOvB,MAAOU,KAAKC,MAAMX,aA3B7B,GAA0Ba,IAAMC,WCiB1BoB,EAAYC,aAfM,SAAChC,GACxB,MAAO,CACNH,MAAOG,EAAMH,UAIY,SAACoC,GAC3B,MAAO,CACNV,cAAe,SAACnB,GACf6B,ELToB,SAAC7B,GACvB,MAAO,CACNF,KATe,WAUfE,KAAMA,GKMI8B,CAAQ9B,QAMF4B,CAA6Cd,GAEzDiB,E,uKAEJ,OACC,kBAAC,IAAD,CAAUrC,MAAOA,GAChB,kBAACiC,EAAD,W,GAJqBrB,IAAMC,WAU/ByB,IAASC,OAAO,kBAAC,EAAD,MAAgBC,SAASC,eAAe,W","file":"static/js/main.167e1ae9.chunk.js","sourcesContent":["import { createStore } from 'redux';\r\n\r\n//action types\r\nconst ADD_POST = 'ADD_POST';\r\n//initial state\r\nconst defaultState = {\r\n\tposts: [],\r\n};\r\n\r\n//action\r\nexport const addPost = (post) => {\r\n\treturn {\r\n\t\ttype: ADD_POST,\r\n\t\tpost: post\r\n\t};\r\n};\r\n\r\n//reducer\r\nconst postReducer = (state = defaultState, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase ADD_POST:\r\n\t\t\treturn {\r\n\t\t\t\tposts: state.posts.concat(action.post)\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n//create store\r\nexport const store = createStore(postReducer);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Input extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tonChange: PropTypes.func,\r\n\t\tvalue: PropTypes.string\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<input onChange={this.props.onChange} value={this.props.value} type='text' />\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class SubmitButton extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tonClick: PropTypes.func,\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<button onClick={this.props.onClick}>Submit post</button>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nexport class Posts extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ul>\r\n\t\t\t\t{this.props.posts.map((post, idx) => {\r\n\t\t\t\t\treturn <li key={idx}>{post}</li>;\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\n//components import\r\nimport {Input} from './input.js';\r\nimport {SubmitButton} from './button.js';\r\nimport {Posts} from './posts.js';\r\nimport {store} from '../redux/redux.js';\r\n\r\nexport class Main extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tinput: '',\r\n\t\t};\r\n\t\tthis.submitPost = this.submitPost.bind(this);\r\n\t\tthis.handleInput = this.handleInput.bind(this);\r\n\t}\r\n\r\n\tsubmitPost() {\r\n\t\tthis.props.submitNewPost(this.state.input);\r\n\t\tstore.getState().posts.map(item => console.log(item));\r\n\t\tthis.setState({input: ''});\r\n\t}\r\n\thandleInput(event) {\r\n\t\treturn this.setState({\r\n\t\t\tinput: event.target.value\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Posts react-redux</h1>\r\n\t\t\t\t<Input onChange={this.handleInput} value={this.state.input}/>\r\n\t\t\t\t<SubmitButton onClick={this.submitPost} />\r\n\t\t\t\t<Posts posts={this.props.posts}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider, connect } from 'react-redux';\r\n\r\n//import redux store\r\nimport { store, addPost } from './redux/redux.js';\r\n//import main react component\r\nimport { Main } from './react_components/main.js';\r\n\r\n//map redux state to react component props\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tposts: state.posts,\r\n\t};\r\n};\r\n//map redux action to react component props\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsubmitNewPost: (post) => {\r\n\t\t\tdispatch(addPost(post));\r\n\t\t}\r\n\t};\r\n};\r\n\r\n//connet redux store to react component (create new component wich must be rendered instead of simple react component)\r\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Main);\r\n\r\nclass AppWrapper extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<Container />\r\n\t\t\t</Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nReactDOM.render(<AppWrapper />, document.getElementById('root'));\r\n"],"sourceRoot":""}